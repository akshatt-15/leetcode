class Solution {
public:
    int minSumOfLengths(vector<int>& arr, int target) {
        ios::sync_with_stdio(false);
        cin.tie(0);
        cout.tie(0);
        int n=arr.size(),i=0,sum=0;
        vector<int>left(n),right(n);
        int len=INT_MAX;
        for(int j=0;j<n;j++)
        {
            sum+=arr[j];
            while(sum>target)
            {
                sum-=arr[i];
                i++;
            }
            if(sum==target)
            {
                len=min(len,j-i+1);
            }
            left[j]=len;
        }        
        i=n-1,sum=0,len=INT_MAX;
        for(int j=n-1;j>=0;j--)
        {
            sum+=arr[j];
            while(sum>target)
            {
                sum-=arr[i];
                i--;
            }
            if(sum==target)
            {
                len=min(len,i-j+1);
            }
            right[j]=len;
        }
        int ans=INT_MAX;
        for(int j=1;j<n;j++)
        {
            if(left[j-1]!=INT_MAX && right[j]!=INT_MAX)
            ans=min(ans,left[j-1]+right[j]);
        }
        return ans==INT_MAX?-1:ans;
    }
};
